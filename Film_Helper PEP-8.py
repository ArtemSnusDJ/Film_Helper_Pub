import random

children_media_dict = {
    "cartoon": [
        "Маша и Медведь: 12 месяцев (2012)", "Смешарики. Начало (2011)", "Фиксики: Большой секрет (2017)", "Лунтик ()",
        "Барбоскины на даче (2020)", "Трое из Простоквашино (1978)", "Винни-Пух (1969)",
        "Малыш и Карлсон (1968)", "Чебурашка (2022)", "Про Федота-стрельца (2008)",
        "Волшебник Изумрудного города (1994)", "Приключения Буратино (1975)",
        "Приключения Петрова и Васечкина, обыкновенные и невероятные (1984)", "Как львенок и черепаха пели песню (1974)",
        "Сказка о царе Салтане (1984)", "Сказка о рыбаке и рыбке (1950)", "Сказка о мертвой царевне и о семи богатырях (1951)",
        "Дюймовочка (1964)", "Снегурочка (1968)", "Иван Царевич и Серый Волк (2011)", "Мойдодыр (1954)", "Кощей Бессмертный (1944)", "Шрек (2001)",
        "Тачки (2006)", "Рататуй (2007)", "ВАЛЛ·И (2008)", "Монстры на каникулах (2012)", "Ледниковый период (2002)", "ЛЕГО Фильм (2014)", "Мегамозг (2010)",
        "Тайна третьей планеты (1981)", "В поисках Немо (2003)", "Вверх (2009)",
        "Зверополис (2016)", "Как приручить дракона (2010)", "Моана (2016)", "Суперсемейка (2004)", "История игрушек (1995)"
    ],
    "film": [
        "Гарри Поттер и Философский камень (2001)", "Хроники Нарнии: Лев, колдунья и платяной шкаф (2005)",
        "Мэри Поппинс, до свидания! (1983)", "Приключения Электроника (1979))", "Гостья из будущего (1984)",
        "Чарли и шоколадная фабрика (2005))", "Остров сокровищ (1988)", "Алиса в Зазеркалье (2016)"
        "Алиса в Стране чудес (2010)", "Питер Пэн (2003)", "Золушка (2015)", "Красавица и Чудовище (1991)", "Аладдин (2019)", "По щучьему велению (2023)"
        "Конёк-Горбунок (2021)", "Бременские музыканты (2024)", "Приключения Паддингтона", "Золотой ключик", "Кролик Питер",
        "Один дома (1990)", "Книга джунглей (2016)", "Малефисента (2014)", "Призрак (2015)", "Элвин и бурундуки (2007)", "Чебурашка (2022)", "Последний богатырь (2017)",
        "Дамбо (2018)", "Моя ужасная няня (2005)", "Хранитель времени (2011)", "Старик Хоттабыч (1956)"
    ]
}


adults_media_dict = {
    'comedy': [
        "Иван Васильевич меняет профессию (1973)", "Операция «Ы» и другие приключения Шурика (1965)", "Бриллиантовая рука (1968)",
        "Маска (1994)", "Отель «Гранд Будапешт» (2014)", "Мальчишник в Вегасе (2009)", "Зависнуть в Палм-Спрингс (2020)",
        "Отпетые мошенницы (2019)", "Мы — Миллеры (2013)", "Третий лишний (2012)", "Призрак (2015)", "Отличница лёгкого поведения (2010)",
        "Евротур (2004)", "Очень страшное кино (2000)", "Барби (2023)", "День выборов (2007)", "Дрянные девчонки (2004)", "Проект X: Дорвались (2012)",
        "Стриптизёрши (2019)", "Третий лишний 2 (2015)", "Вечеринка на вылет (2022)", "Затерянный город (2022)", "Чикаго (2002)", "Маппеты (2011)",
        "Гринч - похититель Рождества (2000)"
    ],
    'sci-fi': [
        "Прибытие (2016)", "Район №9 (2009)", "Марсианин (2015)", "Перспектива (2018)", "Война планеты обезьян (2017)", "Престиж (2006)",
        "Исходный код (2011)", "Атлас облаков (2012)", "Восход планеты обезьян (2014)", "Бунт планеты обезьян (2011)",
        "Интерстеллар (2014)", "Ex Machina: Искусственный интеллект (2014)", "Гравитация (2013)", "Голодные игры (2012)",
        "Аватар (2009)", "Начало (2010)", "Безумный Макс: Дорога ярости (2015)", "Лобстер (2015)", "Она (2013)", "Петля времени (2012)",
        "Грань будущего (2014)", "Бюро коррекции (2011)", "Обливион (2013)", "Прометей (2012)", "Сноупирсер (2013)", "Стражи Галактики (2014)",
        "Дорога (2009)", "Дредд (2012)", "Элизиум: Рай не на Земле (2013)", "Под кожей (2013)", "Аннигиляция (2018)", "Бегущий по лезвию 2049 (2017)",
        "Тихое место (2018)", "Форма воды (2017)", "Первому игроку приготовиться (2018)", "Алита: Боевой ангел (2019)",
        "Человек-паук: Через вселенные (2018)", "Тенет (2020)", "Дюна (2021)", "Человек-невидимка (2020)"
    ],
    'melodrama': [
        "Малена (2000)", "Амели (2001)", "Долгая помолвка (2004)", "В настроении любви (2000)", "Загадочная история Бенджамина Баттона (2008)",
        "Вечное сияние чистого разума (2004)", "Дневник памяти (2004)", "Чтец (2008)", "Полночь в Париже (2011)", "Лучшее предложение (2013)",
        "Вам письмо (1998)", "Розовый мишка (1986)", "Ромео + Джульетта (1996)", "Привидение (1990)", "Бессонница в Сиэтле (1993)",
        "Мулен Руж (2001)", "Офицер и джентльмен (1982)", "С любовью, Саймон (2018)", "Любовь и баскетбол (2000)", "Любовь и другие лекарства (2010)",
        "Любовь случается (2009)", "Любовь O2O (2016)", "Реальная любовь (2014)", "История любви (1970)", "Счастливчик (2012)",
        "До встречи с тобой (2016)", "Влюбленный Джо Блэк (1998)", "Послание в бутылке (1999)", "Ноттинг Хилл (1999)", "Один день (2011)",
        "Дневник памяти (2004)", "Гордость и предубеждение (2005)", "Предложение (2009)", "P.S. Я люблю тебя", "Помни меня (2010)",
        "Ромео + Джульетта (1996)", "Ромео и Джульетта (1968)", "Форма воды (2018)"
    ],

    'action': [
        "Терминатор 2: Судный день (1991)", "Начало (2010)", "Джон Уик (2014)", "Джанго освобожденный (2012)", "Матрица (1999)",
        "Леон (1994)", "Мстители (2012)", "Джон Рэмбо (2008)", "Зеленая миля (1999)", "Назад в будущее (1985)", "Большой куш (2000)",
        "Форсаж (2001)", "Схватка (1995)", "Храброе сердце (1995)", "Бешеные псы (1992)", "Темный рыцарь (2008)", "Гладиатор (2000)",
        "Военный дневник (1983)", "Американский снайпер (2014)", "Танцующий с волками (1990)", "Спасти рядового Райана (1998)",
        "Дикий, дикий Запад (1968)", "Троя (2004)", "Последний самурай (2003)", "Гангстер № 1 (2000)", "Крепкий орешек (1988)",
        "Побег из Шоушенка (1994)", "Трансформеры (2007)", "Гран Торино (2008)", "Индиана Джонс: В поисках утраченного ковчега (1981)",
        "Уцелевший (2015)", "Криминальное чтиво (1994)", "Орудия смерти: Город костей (2013)", "Бойцовский клуб (1999)", "Мачете (2010)",
        "Воин (2011)", "Килл Билл: Вторая расплата (2004)", "Великий уравнитель (2014)", "Пираты Карибского моря: Проклятие Черной жемчужины (2003)",
        "Судья Дредд (1995)"
    ],

    'horrors': [
        "Психо (1960)", "Исчезнувшая (2014)", "Амитивилльское проклятие (2005)", "Звонок (2002)", "Шестое чувство (1999)",
        "Оно (2017)", "Адвокат дьявола (1997)", "Нечто (1982)", "Молчание ягнят (1991)", "Апокалипсис сегодня (1979)",
        "Проклятие (2004)", "Молния передает привет (1989)", "Семь (1995)", "Пианист (2002)", "Рассвет мертвецов (2004)",
        "Сияние (1980)", "Ночь живых мертвецов (1968)", "Предвестник (1976)", "Пила (2004)", "Чужой (1979)", "Ночь кошмара (1984)",
        "Кошмар на улице Вязов (1984)", "Крик (1996)", "Мизери (1990)", "Кровавый алмаз (2006)", "Безумцы (2010)", "Пугало (1996)",
        "Ночь демона (1957)", "Пятница, 13-е (1980)", "Загадка Филадельфии (1999)", "Подозрительные лица (1995)", "Призрак оперы (2004)",
        "Люди Икс (2000)", "Техасская резня бензопилой (1974)", "Сонная лощина (1999)", "Основной инстинкт (1992)", "Семь жизней (2008)",
        "Наследие Тернхилл (1999)", "Летающий голландец (2007)", "Бабадук (2014)"
    ],
    'drama': [
        "Побег из Шоушенка (1994)", "Зеленая миля (1999)", "Форрест Гамп (1994)", "Список Шиндлера (1993)",
        "12 разгневанных мужчин (1957)", "Семь жизней (2008)", "Бойцовский клуб (1999)", "Достучаться до небес (1997)",
        "Властелин колец: Возвращение короля (2003)", "Титаник (1997)", "Спасти рядового Райана (1998)", "Крестный отец (1972)",
        "Престиж (2006)", "В диких условиях (2007)", "Жизнь прекрасна (1997)", "Артист (2011)",
        "Гордость и предубеждение (2005)", "Леон (1994)", "Амели (2001)", "Унесенные ветром (1939)",
        "Иваново детство (1962)", "Звездные войны: Эпизод 5 – Империя наносит ответный удар (1980)", "Поезд на Дарджилинг (2007)", "Аватар (2009)",
        "Жизнь других (2006)", "Криминальное чтиво (1994)", "Гладиатор (2000)", "Афера (1973)",
        "Американская история X (1998)", "Револьвер (2005)", "Укрощение строптивого (1967)", "Король говорит! (2010)",
        "Человек дождя (1988)", "Исходный код (2011)", "Помни (2000)", "Побег из Алькатраца (1979)",
        "Поющие в терновнике (2016)", "Золото (2016)", "Время (2021)", "Сын (2021)"
    ]

}


def add_review_to_file(rating, text, name):
    name_padding = max(0, 12 - len(name))
    with open('reviews.txt', 'a') as file:
        file.write(f"{name}{' ' * name_padding} - {rating} - {text}\n")
    print("Отзыв успешно добавлен.")


def space(num):
    for i in range(1, num + 1):
        print()


def choice_():
    flag = False
    while not flag:
        more_film = input(
            'Предложенный фильм Вам подходит: да / нет ? \n').lower()
        if more_film == 'да':
            space(1)
            print(f'Мы очень рады. Приятного просмотра, {name}!')
            flag = True
        elif more_film == 'нет':
            break
        else:
            print(
                'К сожалению, мы не смогли распознать Ваш ответ. Укажите ещё раз "да" или "нет".')
            continue
    return flag


def film_dict_choice(dictionary, key):
    films = dictionary[key]
    random.shuffle(films)
    result = False
    for film in films:
        space(2)
        print(f'Предлагаем: {film}')
        space(1)
        result = choice_()
        if result == True:
            break
        else:
            continue

    return result


alphabet = 'qwertyuiopasdfghjklzxcvbnmйцукенгшщзхъэждлорпавыфячсмитьбю'
print('Здравствуйте. Добро пожаловать в чат-бот для помощи выбора фильма на вечер!')
name_all_correct = False
while name_all_correct != True:
    name = input('Представьтесь, пожалуйста: ')
    space(1)

    if name == '':
        print('Кажется ваш ввод содержит ошибку. Повторите попытку')
        continue

    is_name_valid = True

    for char in name:
        if char.lower() not in alphabet:
            print('Кажется ваш ввод содержит ошибку. Повторите попытку')
            is_name_valid = False
            break

    if is_name_valid:
        while True:
            print(f'''Вы ввели: {name}.
1. Имя введено корректно.
2. Нет, я хочу поменять имя.
Введите 1 или 2':''')
            choice = input()
            if choice == '2':
                break
            elif choice == '1':
                name_all_correct = True
                break
            else:
                space(1)
                print('Ваш ответ не похож на 1 или 2. Повторите ввод.')
                space(1)
                continue


space(2)
print('Ввод имени успешен')
name = name.title().strip()
done = False

while done != True:
    print(
        f"Приятно познакомиться, {name}! Вы планируете просмотр с детьми: да / нет? | (Для выхода из программы напишите '0')")
    choice = input().lower()

    if choice == 'да':
        space(3)
        while True:
            print(
                f'Вы хотите посмотреть фильм или мультфильм? (напишите "фильм" или "мультфильм")')
            print('Напишите 0 для возврата:')
            choice2 = input().lower()

            if choice2 == 'фильм':
                space(2)
                result = film_dict_choice(children_media_dict, 'film')

            elif choice2 == 'мультфильм':
                result = film_dict_choice(children_media_dict, 'cartoon')

            elif choice2 == '0':
                space(2)
                break

            else:
                space(1)
                print('Ваш ответ не похож на "фильм" или "мультфильм". Повторите ввод.')
                space(1)
                continue

            if result == False:
                space(2)
                print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                space(1)
                continue

            else:
                done = True
                break

    elif choice == 'нет':
        print('''Какой жанр Вы хотели бы посмотреть:
    1. комедия
    2. фантастика
    3. драма
    4. мелодрама
    5. боевик
    6. ужасы''')
        print('Напишите 0 для возврата:')
        choice_genry = input('Введите цифру: ')
        if choice_genry == "1":
            space(1)
            print('Выбран жанр: Комедия')
            while True:
                result = film_dict_choice(adults_media_dict, 'comedy')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break

        elif choice_genry == "2":
            space(1)
            print('Выбран жанр: Фантастика')
            while True:
                result = film_dict_choice(adults_media_dict, 'sci-fi')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break

        elif choice_genry == '3':
            space(1)
            print('Выбран жанр: Драма')
            while True:
                result = film_dict_choice(adults_media_dict, 'drama')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break

        elif choice_genry == "4":
            space(1)
            print('Выбран жанр: Мелодрама')
            while True:
                result = film_dict_choice(adults_media_dict, 'melodrama')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break

        elif choice_genry == '5':
            space(1)
            print('Выбран жанр: Боевик')
            while True:
                result = film_dict_choice(adults_media_dict, 'action')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break

        elif choice_genry == "6":
            space(1)
            print('Выбран жанр: Ужасы')
            while True:
                result = film_dict_choice(adults_media_dict, 'horrors')
                if result == False:
                    space(2)
                    print('''Кажется, мы не смогли подобрать вам подходящий фильм.
Попробуйте сменить категорию.''')
                    space(1)
                    break

                else:
                    done = True
                    break
        elif choice_genry == '0':
            space(2)

        else:
            print('Ваш ответ не похож ни на один из предложенных.')
            print('Повторите попытку.')
            space(2)

    elif choice == '0':
        space(3)
        print('До свидания.')
        print('Будем рады видеть вас снова!')
        break

    else:
        space(2)
        print("Пожалуйста, выберите 'да', 'нет' или '0' для выхода.")
        space(2)

space(1)
end = False
review_given = False
text_given = False
while not end:
    print('Хотите оставить отзыв о нашей работе?')
    review = input('Введите да или нет: ').lower()
    if review == 'да':
        space(1)
        while not text_given:
            print('Напишите ваш отзыв ниже и нажмите Enter: \n (Если хотите вернуться назад - введите 0)')
            user_review = input()
            if user_review == '0':
                break
            elif not user_review.strip():
                space(1)
                print('Отзыв не может быть пустым. Повторите ввод.')
                space(1)
                continue
            else:
                text_given = True

        if user_review != '0':
            while True:
                print('Пожалуйста, оцените нашу работу от 1 до 5')
                score = input()
                if score.isdigit():
                    score = int(score)
                    if 1 <= score <= 5:
                        break
                    elif score > 5:
                        space(2)
                        print('Мы бы и рады получить оценку выше 5,')
                        print('Но лучше придерживаться диапазона.')
                        space(1)
                        continue
                    else:
                        print('Оценка должна быть от 1 до 5. Повторите ввод.')
                else:
                    print('Оценка должна быть числом. Повторите ввод.')
            add_review_to_file(score, user_review, name)
            review_given = True
            space(1)
            print('Спасибо, что доверяете нам.')
            print('До новых встреч!')
        text_given = False
    elif review == 'нет':
        space(2)
        print('Хорошо.')
        print('До новых встреч!')
        break
    if review_given == True:
        end = True
